#!/usr/bin/env python2
# -*- coding: utf-8 -*-
# The above encoding declaration is required and the file must be saved as UTF-8

'''–°–æ–∑–¥–∞–µ–º –º–µ–Ω—é –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–æ–º'''

# https://yandex.ru/video/preview/14627769197229213338  # -- –æ—Ç–∫—É–¥–∞ –≤–∏–¥–æ—Å. –†–∞—Å–ø–∏—Å–∞–Ω–æ –æ—Ç–ª–∏—á–Ω–æ
# http://text-image.ru/index/symbols/0-10   -- —Ä–∏—Å—É–Ω–æ—á–∫–∏ –æ—Ç—Å—é–¥–∞----

#pip install pyTelegramBotAPI
from datetime import datetime
import telebot
from telebot import types
import config
import view
import model


# bot = telebot.TeleBot(config.token)  # –ü–æ–¥–∫–ª—é—á–∏–ª–∏ —Ç–æ–∫–µ–Ω

# vps_list = ['–ë—É—Ç–æ–≤–æ','–î–µ–≥—É–Ω–∏–Ω–æ','–†–æ—Å—Ç–æ–∫–∏–Ω–æ','–ö—É—Ä–∫–∏–Ω–æ','–¶–∞—Ä–∏—Ü—ã–Ω–æ']
#
# vps_dict = {'–ë—É—Ç–æ–≤–æ':['–ì–∞–≥–∞—Ä–∏–Ω', '–õ–µ–æ–Ω–æ–≤', '–ö–æ–º–∞—Ä–æ–≤'],
#             '–î–µ–≥—É–Ω–∏–Ω–æ'  :['–î–∏—Ç–æ–≤', '–î–µ—Ä–µ—à–∫–æ–≤–∞', '–î—Ä–∞–º–∞—Ä–µ–Ω–∫–æ','–î–∫–∞–ª–æ–≤'],
#             '–†–æ—Å—Ç–æ–∫–∏–Ω–æ' :['–¢–∏—Ç–æ–≤-p', '–¢–µ—Ä–µ—à–∫–æ–≤–∞-p', '–ö—Ä–∞–º–∞—Ä–µ–Ω–∫–æ-p','–ß–∫–∞–ª–æ–≤-p'],
#              '–ö—É—Ä–∫–∏–Ω–æ'   :['–¢–∏—Ç–æ–≤-k', '–¢–µ—Ä–µ—à–∫–æ–≤–∞-k', '–ö—Ä–∞–º–∞—Ä–µ–Ω–∫–æ-k','–ß–∫–∞–ª–æ–≤-k'],
#             '–¶–∞—Ä–∏—Ü—ã–Ω–æ'  :['–¶–∏—Ç–æ–≤', '–¶–µ—Ä–µ—à–∫–æ–≤–∞', '–¶–ö—Ä–∞–º–∞—Ä–µ–Ω–∫–æ','–¶–ß–∫–∞–ª–æ–≤', '–¶–ö–æ–∂–µ–¥—É–±', '–¶–ü–æ–∫—Ä—ã—à–∫–∏–Ω'],
#              '–ù–µ–∫—Ä–∞—Å–æ–≤–∫–∞':['–ù–∏—Ç–æ–≤', '–ù–¢–µ—Ä–µ—à–∫–æ–≤–∞', '–ù–ö—Ä–∞–º–∞—Ä–µ–Ω–∫–æ','–ù–ß–∫–∞–ª–æ–≤'],
#              '–ü–µ—Ä–æ–≤–æ':['–ü–∏—Ç–æ–≤', '–ü–¢–µ—Ä–µ—à–∫–æ–≤–∞', '–ü–ö—Ä–∞–º–∞—Ä–µ–Ω–∫–æ','–ü–ß–∫–∞–ª–æ–≤'],
#
#             }


# def dinamic_columns_button(markup, button_dict):
#     #  ----------------------------- —Ñ—É–Ω–∫—Ü–∏—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏—Ö —Ä—è–¥–æ–≤ –∫–Ω–æ–ø–æ–∫ -----
#
#     item_back = types.KeyboardButton('‚Ü™Ô∏è–í –º–µ–Ω—é')  # ---- —Å–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É
#     menu_vps_dict = [types.KeyboardButton(i) for i in button_dict]  # --- —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–ª —Å–ø–∏—Å–æ–∫ –∫–Ω–æ–ø–æ–∫ ---
#
#     # --------------------- —Ä–∞–∑–ª–æ–∂–∏—Ç—å –Ω–∞ –¥–≤–µ –∫–æ–ª–æ–Ω–∫–∏ –∫–Ω–æ–ø–∫–∏ ------
#     if len(menu_vps_dict) == 1:
#         markup.add(menu_vps_dict[0])
#         markup.add(item_back)   # -- –µ—Å–ª–∏ –¥–æ–±–∞–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –æ—Ç–¥–µ–ª—å–Ω—ã–º–∏ –ø–æ—Ä—Ü–∏—è–º–∏, —Ç–æ –∫–Ω–æ–ø–∫–∏
#                                 # -- –≤—ã–≤–æ–¥—è—Ç—Å—è —ç—Ç–∏–º–∏ –∂–µ –ø–æ—Ä—Ü–∏—è–º–∏. –ü–æ—ç—Ç–æ–º—É –¥–ª—è –û–¢–î–ï–õ–¨–ù–û–ì–û –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∏
#                                 # --- –¥–æ–±–∞–≤–ª—è–µ–º –µ–µ –æ—Ç–¥–µ–ª—å–Ω–æ –≤ –º–µ–Ω—é  (–¥–µ–ª–∞–µ–º —Ç–∞–∫ –¥–ª—è "–ù–ê–ó–ê–î" –Ω–∞–ø—Ä–∏–º–µ—Ä)
#     elif len(menu_vps_dict) % 2 == 0:
#         for i in range(0, len(menu_vps_dict), 2):
#             markup.add(menu_vps_dict[i], menu_vps_dict[i + 1])
#         markup.add(item_back)
#     else:
#         i = 0
#         while i < len(menu_vps_dict):
#             if len(menu_vps_dict) - i >= 2:
#                 markup.add(menu_vps_dict[i], menu_vps_dict[i + 1])
#                 i += 2
#             else:
#                 markup.add(menu_vps_dict[i])
#                 i += 1
#         markup.add(item_back)
#     #  ----------------------------- —Ñ—É–Ω–∫—Ü–∏—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏—Ö —Ä—è–¥–æ–≤ –∫–Ω–æ–ø–æ–∫ -----
#     return markup

#
# @bot.message_handler(commands=["start"])
# def start(message): # –ù–∞–∑–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–µ –∏–≥—Ä–∞–µ—Ç –Ω–∏–∫–∞–∫–æ–π —Ä–æ–ª–∏
#     markup = types.ReplyKeyboardMarkup(resize_keyboard=True)  # -–°–û–ó–î–ê–Æ –º–µ–Ω—é markup (resize_keyb. —á—Ç–æ –±—ã –∫–Ω–æ–ø–∫–∏ –≤–ª–µ–∑–∞–ª–∏)
#     item2 = types.KeyboardButton('‚úâ –°–ø—Ä–∞–≤–∫–∞ –æ —Ä–∞–±–æ—Ç–µ –±–æ—Ç–∞')  # ------ –ø–æ–¥–º–µ–Ω—é1
#     item3 = types.KeyboardButton('‚úÖ –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω')  # ------–ø–æ–¥–º–µ–Ω—é2
#     item4 = types.KeyboardButton('üîí –í–µ—Ä–Ω—É—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω')  # -------–ø–æ–¥–º–µ–Ω—é3
#
#     markup.add(item2, item3, item4)
#
#     # --- —Å—Ä–∞–∑—É –º–µ–Ω—é –Ω–µ –ø–æ—è–≤–∏—Ç—Å—è, –Ω–∞–¥–æ –ø—É–ª—å–Ω—É—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è --
#     bot.send_message(message.chat.id, "–ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∑–∞–ø–∏—Å–∏ –≤ –∂—É—Ä–Ω–∞–ª –ø—Ä–∏–µ–º–∞/–≤—ã–¥–∞—á–∏ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤",
#                      reply_markup=markup)  # reply_markup - –≤—ã–≤–æ–¥ –º–µ–Ω—é
#
# # ---- —Å–æ–∑–¥–∞–¥–∏–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏–π (–ø–æ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¢–ï–ö–°–¢–ê, –ø–æ–ª—É—á–µ–Ω–Ω–æ–≥–æ –∏–∑ —Ç–µ–∫—Å—Ç–∞ –Ω–∞–∂–∞—Ç–æ–≥–æ –ú–ï–ù–Æ)-----------
# @bot.message_handler(content_types=["text"])
# def bot_messages(message): # --------------------—Ñ–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –í–ü–° –¥–ª—è –≤—ã–±–æ—Ä–∞ –∏ –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –ø—Ä–æ–≤–∞–ª–∏–≤–∞–Ω–∏—è –∫ –§–ò–û ---
#     print(f'–ø—Ä–æ–∏–∑–æ—à–ª–æ –Ω–∞–∂–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –∏–ª–∏ –≤–≤–µ–¥–µ–Ω —Ç–µ–∫—Å—Ç {message.text}')
#     if message.chat.type == 'private':      # --- –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ —Ç–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª, –∞ –ª–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ --
#         if message.text == '‚úâ –°–ø—Ä–∞–≤–∫–∞ –æ —Ä–∞–±–æ—Ç–µ –±–æ—Ç–∞':
#             bot.send_message(message.chat.id, '–¢—É—Ç –º—ã —Ä–∞—Å–ø–∏—à–µ–º, –∫–∞–∫ –∂–µ –ø–æ–ª—É—á–∏—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω –∏ –∫–∞–∫ –µ–≥–æ —Å–¥–∞—Ç—å')
#
#         elif message.text == '‚úÖ –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω':
#             # ---- –î–ò–ù–ê–ú–ò–ß–ï–°–ö–ò —Å–æ–∑–¥–∞—Ç—å –∫–Ω–æ–ø–∫–∏ -------
#             markup = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)  # -–°–û–ó–î–ê–Æ –º–µ–Ω—é
#             dinamic_columns_button(markup, vps_dict)
#             # --- —Å—Ä–∞–∑—É –º–µ–Ω—é –Ω–µ –ø–æ—è–≤–∏—Ç—Å—è, –Ω–∞–¥–æ –ø—É–ª—å–Ω—É—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è --
#             bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–µ—Ç–µ –í–ü–°, –≥–¥–µ –í–´–î–ê–Å–¢–°–Ø ‚òè\n –∏–ª–∏ ‚Ü™Ô∏è–í –º–µ–Ω—é",
#                              reply_markup=markup)  # reply_markup - –≤—ã–≤–æ–¥ –º–µ–Ω—é
#             bot.register_next_step_handler(message, choice_fio_from_vps_take_phone)  # --- –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –≤—ã–±–æ—Ä—É –í–ü–°
#
#         elif message.text == 'üîí –í–µ—Ä–Ω—É—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω':
#             # ---- –î–ò–ù–ê–ú–ò–ß–ï–°–ö–ò —Å–æ–∑–¥–∞—Ç—å –∫–Ω–æ–ø–∫–∏ -------
#             markup = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)  # -–°–û–ó–î–ê–Æ –º–µ–Ω—é
#             dinamic_columns_button(markup, vps_dict)
#             # --- —Å—Ä–∞–∑—É –º–µ–Ω—é –Ω–µ –ø–æ—è–≤–∏—Ç—Å—è, –Ω–∞–¥–æ –ø—É–ª—å–Ω—É—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è --
#             bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–µ—Ç–µ –í–ü–°, –∫—É–¥–∞ –°–î–ê–ï–¢–°–Ø ‚òé\n –∏–ª–∏ ‚Ü™Ô∏è–í –º–µ–Ω—é ", reply_markup=markup)
#             bot.register_next_step_handler(message, choice_fio_from_vps_return_phone)  # --- –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –≤—ã–±–æ—Ä—É –í–ü–°
#
#             # bot.register_next_step_handler(message, add_message_into_db_return)
#         else:
#             bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–µ—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ, —É–∫–∞–∑–∞–Ω–Ω–æ–µ –Ω–∞ –∫–Ω–æ–ø–∫–∞—Ö –≤–Ω–∏–∑—É —ç–∫—Ä–∞–Ω–∞... –∏–ª–∏ /start –¥–ª—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ –ë–û–¢–∞ ")
#
#
# @bot.message_handler(content_types=["text"])
# def choice_fio_from_vps_take_phone(message):
#     if message.text == '‚Ü™Ô∏è–í –º–µ–Ω—é':
#         start(message)
#
#     else:
#         vps_name = message.text # ------- –ø–æ–ª—É—á–∏–ª –∏–º—è –í–ü–° (–≤—ã–±—Ä–∞–Ω–æ –Ω–∞–∂–∞—Ç–∏–µ–º –∫–Ω–æ–ø–∫–∏ - —Ç–µ–∫—Å—Ç –ö–ù–û–ü–ö–ò)
#         markup_choise_fio = types.ReplyKeyboardMarkup(resize_keyboard=True)  # -–°–û–ó–î–ê–Æ –º–µ–Ω—é markup
#         dinamic_columns_button(markup_choise_fio, vps_dict[vps_name])
#         # --- —Å—Ä–∞–∑—É –º–µ–Ω—é –Ω–µ –ø–æ—è–≤–∏—Ç—Å—è, –Ω–∞–¥–æ –ø—É–ª—å–Ω—É—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è --
#         bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–µ—Ç–µ –∫—Ç–æ –ü–û–õ–£–ß–ê–ï–¢ ‚òè\n –∏–ª–∏ ‚Ü™Ô∏è–í –º–µ–Ω—é ",
#                          reply_markup=markup_choise_fio)  # reply_markup - –≤—ã–≤–æ–¥ –º–µ–Ω—é
#         bot.register_next_step_handler(message, add_message_into_db_receive, vps_name)  # --- –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –≤—ã–±–æ—Ä—É FIO
#
# @bot.message_handler(content_types=["text"])
# def choice_fio_from_vps_return_phone(message):
#     if message.text == '‚Ü™Ô∏è–í –º–µ–Ω—é':
#         start(message)
#
#     else:
#         vps_name = message.text # ------- –ø–æ–ª—É—á–∏–ª –∏–º—è –í–ü–° (–≤—ã–±—Ä–∞–Ω–æ –Ω–∞–∂–∞—Ç–∏–µ–º –∫–Ω–æ–ø–∫–∏ - —Ç–µ–∫—Å—Ç –ö–ù–û–ü–ö–ò)
#         markup_choise_fio = types.ReplyKeyboardMarkup(resize_keyboard=True)  # -–°–û–ó–î–ê–Æ –º–µ–Ω—é markup
#         dinamic_columns_button(markup_choise_fio, vps_dict[vps_name])
#         # --- —Å—Ä–∞–∑—É –º–µ–Ω—é –Ω–µ –ø–æ—è–≤–∏—Ç—Å—è, –Ω–∞–¥–æ –ø—É–ª—å–Ω—É—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è --
#         bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–µ—Ç–µ –∫—Ç–æ –°–î–ê–Å–¢ ‚òé\n –∏–ª–∏ ‚Ü™Ô∏è–í –º–µ–Ω—é ",
#                          reply_markup=markup_choise_fio)  # reply_markup - –≤—ã–≤–æ–¥ –º–µ–Ω—é
#         bot.register_next_step_handler(message, add_message_into_db_return, vps_name)  # --- –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –≤—ã–±–æ—Ä—É FIO


# def add_message_into_db_receive(message, vps_name):
#     if message.text == '‚Ü™Ô∏è–í –º–µ–Ω—é':
#         start(message)
#
#     else:
#         fio = message.text
#         keyboard = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)  # –ü–æ–¥–∫–ª—é—á–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
#         button_phone = types.KeyboardButton(text='‚úÖ –ó–∞–ø–∏—Å–∞—Ç—å –í–´–î–ê–ß–£ ‚òè –≤ –∂—É—Ä–Ω–∞–ª',
#                                             request_contact=True)  # –£–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏, –∫–æ—Ç–æ—Ä–∞—è –ø–æ—è–≤–∏—Ç—Å—è —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
#         item_back = types.KeyboardButton('–û—Ç–º–µ–Ω–∞\n‚Ü™Ô∏è–í –º–µ–Ω—é')
#
#         keyboard.add(button_phone, item_back)  # –î–æ–±–∞–≤–ª—è–µ–º —ç—Ç—É –∫–Ω–æ–ø–∫—É
#         bot.send_message(message.chat.id, f'–ü–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–∞ –∑–∞–ø–∏—Å—å –ü–û–õ–£–ß–ï–ù–ò–Ø ‚òè {fio} –≤ –∂—É—Ä–Ω–∞–ª {vps_name}.\n',
#                                           # f'–î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –º–µ–Ω—é –≤–≤–µ–¥–∏—Ç–µ "1" –∏ –Ω–∞–∂–º–∏—Ç–µ ‚û§',
#                          reply_markup=keyboard)  # –î—É–±–ª–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
#         bot.register_next_step_handler(message, contact_receive, fio, vps_name)
#
# def add_message_into_db_return(message, vps_name):
#     if message.text == '‚Ü™Ô∏è–í –º–µ–Ω—é':
#         start(message)
#     #—Ç—É—Ç —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø–∏—Å–∏ –≤ –±–¥
#     else:
#         fio = message.text
#         keyboard = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)  # –ü–æ–¥–∫–ª—é—á–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
#         button_phone = types.KeyboardButton(text='‚úÖ –ó–∞–ø–∏—Å–∞—Ç—å –í–û–ó–í–†–ê–¢ ‚òé –≤ –∂—É—Ä–Ω–∞–ª',
#                                             request_contact=True)  # –£–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏, –∫–æ—Ç–æ—Ä–∞—è –ø–æ—è–≤–∏—Ç—Å—è —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
#         item_back = types.KeyboardButton('–û—Ç–º–µ–Ω–∞\n‚Ü™Ô∏è–í –º–µ–Ω—é')
#
#         keyboard.add(button_phone, item_back)  # –î–æ–±–∞–≤–ª—è–µ–º —ç—Ç—É –∫–Ω–æ–ø–∫—É
#         bot.send_message(message.chat.id, f'–ü–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–∞ –∑–∞–ø–∏—Å—å –í–û–ó–í–†–ê–¢–ê ‚òé {fio} –≤ –∂—É—Ä–Ω–∞–ª {vps_name}.\n',
#                          # f'–î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –º–µ–Ω—é –≤–≤–µ–¥–∏—Ç–µ "1" –∏ –Ω–∞–∂–º–∏—Ç–µ ‚û§',
#                          reply_markup=keyboard)  # –î—É–±–ª–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
#         bot.register_next_step_handler(message, contact_return, fio, vps_name)

#
# def contact_receive(message, fio, vps_name):
#     if message.text != None:
#         start(message)
#
#     else:
#         if message.contact is not None:  # –ï—Å–ª–∏ –ø—Ä–∏—Å–ª–∞–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç <strong>contact</strong> –Ω–µ —Ä–∞–≤–µ–Ω –Ω—É–ª—é
#             phone_number = message.contact.phone_number
#             now = datetime.now()
#             date_ = now.strftime("%d-%m-%Y %H:%M")
#
#
#             doc = open('client.txt', 'a', encoding='utf-16')
#             # doc.write(f"\n–í–ü–° - {vps_name} - –§–ò–û - {fio} –¢–µ–ª–µ—Ñ–æ–Ω - {phone_number} –ü–æ–ª—É—á–µ–Ω - {date_}" )
#             doc.write(f"\n{vps_name};{fio};{phone_number};–ü–æ–ª—É—á–µ–Ω;{date_}" )
#             doc.close()
#
#             bot.send_message(message.chat.id, f'{fio} –ø–æ–ª—É—á–∏–ª {phone_number} –≤ {vps_name} - {date_}') # -- –≤—ã–≤–æ–¥ —Å–æ–æ–±—â –Ω–∞ —ç–∫—Ä–∞–Ω —Ç–µ–ª–µ—Ñ
#             start(message)
#
#
# def contact_return(message, fio, vps_name):
#     if message.text != None:
#         start(message)
#
#     else:
#         if message.contact is not None:  # –ï—Å–ª–∏ –ø—Ä–∏—Å–ª–∞–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç <strong>contact</strong> –Ω–µ —Ä–∞–≤–µ–Ω –Ω—É–ª—é
#             phone_number = message.contact.phone_number
#             now = datetime.now()
#             date_ = now.strftime("%d-%m-%Y %H:%M")
#
#             doc = open('client.txt', 'a', encoding='utf-16')
#             # doc.write(f"\n–í–ü–° - {vps_name} - –§–ò–û - {fio} –¢–µ–ª–µ—Ñ–æ–Ω - {phone_number} –°–¥–∞–Ω    - {date_}" )
#             doc.write(f"\n{vps_name}; {fio}; {phone_number}; –°–¥–∞–Ω; {date_}" )
#             doc.close()
#
#             bot.send_message(message.chat.id, f'{fio} –°–î–ê–õ {phone_number} –≤ {vps_name} - {date_}') # -- –≤—ã–≤–æ–¥ —Å–æ–æ–±—â –Ω–∞ —ç–∫—Ä–∞–Ω —Ç–µ–ª–µ—Ñ
#             start(message)



if __name__ == '__main__':
     bot.infinity_polling(none_stop=True)

